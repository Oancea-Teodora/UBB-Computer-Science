     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 01                          b db 1
    15 00000001 02                          a db 2
    16 00000002 03                          c db 3
    17 00000003 0400                        d dw 4
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ... 
    22                                          ; (100*a+d+5-75*b)/(c-5)
    23 00000000 B800000000                      mov eax, 0
    24 00000005 B900000000                      mov ecx, 0
    25 0000000A BA00000000                      mov edx, 0
    26 0000000F BB00000000                      mov ebx, 0
    27 00000014 BE00000000                      mov esi, 0
    28 00000019 BF00000000                      mov edi, 0
    29                                          
    30 0000001E A0[01000000]                    mov al, [a]
    31 00000023 B364                            mov bl, 100
    32 00000025 F6E3                            mul bl
    33                                          
    34 00000027 660305[03000000]                add ax, [d]
    35 0000002E 6683C005                        add ax, 5
    36 00000032 50                              push eax
    37                                          
    38 00000033 A0[00000000]                    mov al, [b]
    39 00000038 B34B                            mov bl, 75
    40 0000003A F6E3                            mul bl
    41 0000003C 6689C3                          mov bx, ax
    42 0000003F 58                              pop eax
    43 00000040 6629D8                          sub ax, bx
    44 00000043 50                              push eax
    45                                          
    46 00000044 B800000000                      mov eax, 0
    47 00000049 A0[02000000]                    mov al, [c]
    48 0000004E 6683E805                        sub ax, 5
    49 00000052 6689C3                          mov bx, ax
    50 00000055 58                              pop eax 
    51                                          
    52 00000056 F7F3                            div ebx
    53                                          
    54                                          
    55                                          
    56                                         
    57                                          
    58                                          
    59                                          
    60                                          
    61                                          
    62                                          
    63                                          
    64                                      
    65                                          ; exit(0)
    66 00000058 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    67 0000005A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
